#CHAPTER FOUR (4)
#EXERCISES

# Exercise 1: Run the program on your system and see what numbers
# you get. Run the program more than once and see what numbers you
# get.


import random

for i in range(10):
    x = random.random()
    print(x)

OUTPUT:
9.957740322328217
0.5963467894838237
5.526189194187612
3.816692070769575
0.7575971382170732
8.127181234257446
2.5553672544299566
4.671734213702892
0.7551205199181044
9.050032292375366

# Exercise 2: Move the last line of this program to the top, so the function
# call appears before the definitions. Run the program and see what error
# message you get.


repeat_lyrics()

def print_lyrics():
    print("I'm a lumberjack, and I'm okay.")
    print('I sleep all night and I work all day.')

def repeat_lyrics():
    print_lyrics()
    print_lyrics()

OUTPUT:

Traceback (most recent call last):
  File "c:\Users\User\Documents\PYTHON\0-square.py", line 522, in <module>
    repeat_lyrics()
NameError: name 'repeat_lyrics' is not defined


# Exercise 3: Move the function call back to the bottom and move the
# definition of print_lyrics after the definition of repeat_lyrics. What
# happens when you run this program?


def repeat_lyrics():
    print_lyrics()
    print_lyrics()

def print_lyrics():
    print("I'm a lumberjack, and I'm okay.")
    print('I sleep all night and I work all day.')

repeat_lyrics()

OUTPUT:

I'm a lumberjack, and I'm okay.
I sleep all night and I work all day.
I'm a lumberjack, and I'm okay.
I sleep all night and I work all day.

# Exercise 4: What is the purpose of the “def” keyword in Python?
# a) It is slang that means “the following code is really cool”
# b) It indicates the start of a function
# c) It indicates that the following indented section of code is to be stored for later
# d) b and c are both true
# e) None of the above

Ans:
b) It indicates the start of a function 


# Exercise 5: What will the following Python program print out?

# def fred():
#     print("Zap")

# def jane():
#     print("ABC")

# jane()
# fred()
# jane()

# a) Zap ABC jane fred jane
# b) Zap ABC Zap
# c) ABC Zap jane
# d) ABC Zap ABC
# e) Zap Zap Zap

Ans:
d) ABC Zap ABC


# Exercise 6: Rewrite your pay computation with time-and-a-half for over-
# time and create a function called computepay which takes two parameters
# (hours and rate).
# Enter Hours: 45
# Enter Rate: 10
# Pay: 475.0

Hours = input("Enter Hours: ")

Rate = input("Enter Rate: ")

def computePay(Hours , Rate):

    OvertimePay = ((Hours - 40) * 10) * 1.5

    Pay = (40 * Rate ) + OvertimePay
    print (Pay)

computePay(Hours , Rate)


# Exercise 7: Rewrite the grade program from the previous chapter using
# a function called computegrade that takes a score as its parameter and
# returns a grade as a string.

# Score Grade
# >= 0.9 A
# >= 0.8 B
# >= 0.7 C
# >= 0.6 D
# < 0.6 F
# Enter score: 0.95
# A
# Enter score: perfect
# Bad score
# Enter score: 10.0
# Bad score
# Enter score: 0.75
# C
# Enter score: 0.5
# F
# Run the program repeatedly to test the various different values for input


score = input("Enter score: ")

def computegrade(score):  

    if score >= 0 and score <= 1:
        if score >= 0.9:
            return("A")
        elif score >= 0.8:
            return("B")
        elif score >= 0.7:
            return("C")
        elif score >= 0.6:
            return("D")
        elif score < 0.6:
            return("F")
    else:
            return("Bad score")
print(computegrade(score))
